[{"path":"https://stefanocoretta.github.io/tidygam/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Stefano Coretta Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/articles/get-started.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Get started","text":"tidymv package offers two main user-oriented functions: predict_gam(): returns predictions outcome variable based predictors GAM model. user can specify specific values predictor, exclude model terms. get_difference(): returns difference two smooths intervals along smooth include 0. output function can plotted plot(), methods plot.tidygam() plot.tidygam.diff().","code":""},{"path":"https://stefanocoretta.github.io/tidygam/articles/get-started.html","id":"basic-model-prediction","dir":"Articles","previous_headings":"","what":"Basic model prediction","title":"Get started","text":"Let’s start simple model get model-based predictions. use gest data table, available tidygam. table consists counts gestures performed infants three cultural backgrounds participating longitudinal study (see ?gest details references). following GAM models overall trend number gestures 10 12 months age. Now can obtain predicted counts predict_gam().","code":"data(\"gest\") gest #> # A tibble: 540 × 5 #>    dyad  background months gesture count #>    <fct> <fct>       <dbl> <fct>   <dbl> #>  1 b01   Bengali        10 ho_gv       0 #>  2 b01   Bengali        10 point       0 #>  3 b01   Bengali        10 reach       5 #>  4 b01   Bengali        11 ho_gv       0 #>  5 b01   Bengali        11 point       1 #>  6 b01   Bengali        11 reach       8 #>  7 b01   Bengali        12 ho_gv       3 #>  8 b01   Bengali        12 point       0 #>  9 b01   Bengali        12 reach       0 #> 10 b02   Bengali        10 ho_gv       1 #> # ℹ 530 more rows gs <- gam(   count ~ s(months, k = 3),   data = gest,   family = poisson )  summary(gs) #>  #> Family: poisson  #> Link function: log  #>  #> Formula: #> count ~ s(months, k = 3) #>  #> Parametric coefficients: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  1.27491    0.02361   53.99   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>             edf Ref.df Chi.sq p-value     #> s(months) 1.861  1.981  248.9  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.0372   Deviance explained = 6.61% #> UBRE = 6.1921  Scale est. = 1         n = 540 gs_pred <- predict_gam(gs) gs_pred #> # A tibble: 11 × 5 #>    months count     se lower_ci[,1] upper_ci[,1] #>     <dbl> <dbl>  <dbl>        <dbl>        <dbl> #>  1   10   0.768 0.0498        0.670        0.865 #>  2   10.2 0.896 0.0396        0.818        0.973 #>  3   10.4 1.02  0.0340        0.954        1.09  #>  4   10.6 1.14  0.0334        1.07         1.21  #>  5   10.8 1.25  0.0352        1.18         1.32  #>  6   11   1.35  0.0363        1.28         1.42  #>  7   11.2 1.44  0.0346        1.37         1.51  #>  8   11.4 1.51  0.0308        1.45         1.58  #>  9   11.6 1.58  0.0269        1.53         1.64  #> 10   11.8 1.65  0.0265        1.59         1.70  #> 11   12   1.71  0.0315        1.64         1.77"},{"path":"https://stefanocoretta.github.io/tidygam/articles/get-started.html","id":"plot-predicted-values","dir":"Articles","previous_headings":"","what":"Plot predicted values","title":"Get started","text":"predict_gam() returns object class tidygam, can plotted plot(). user specify “series” used x-axis. outcome variable automatically selected y-axis.  Since gs model used log-link function, output predict_gam() log-odds, rather counts. can convert log-odds counts exponentiating . tran_fun argument allows user specify function transform predicted outcome values .","code":"gs_pred %>%   plot(series = \"months\") predict_gam(gs, tran_fun = exp) %>%   plot(series = \"months\")"},{"path":"https://stefanocoretta.github.io/tidygam/articles/get-started.html","id":"models-with-by-variables","dir":"Articles","previous_headings":"","what":"Models with by-variables","title":"Get started","text":"Smooths can fitted different levels factor using -called -variables, specified within smooth function s() argument. Note smooths automatically centred need include -variable parametric term . model, fit smooth along months background data. predictor comparison selected comparison argument plot().  Note output plot() ggplot2 object, can modified using ggplot2 functions.  Let’s try now model gesture background -variables. Note models like one conceptually equivalent linear models without interactions -variables. clear plotting predictions: notice shapes smooths similar within background, differ slope (effect including separate -variables).  wish plot effect specific -variables, can exclude terms like following code chunk. Note name terms match precisely name model summary exclude parametric smooth terms -variable. also need pick level excluded variable (otherwise predictions repeated level excluded variable, since variable excluded, predictions ).  following section illustrates specify plot models GAM equivalent classical interactions (e.g. background * gesture).","code":"gs_by <- gam(   count ~ background + s(months, by = background, k = 3),   data = gest,   family = poisson )  summary(gs_by) #>  #> Family: poisson  #> Link function: log  #>  #> Formula: #> count ~ background + s(months, by = background, k = 3) #>  #> Parametric coefficients: #>                   Estimate Std. Error z value Pr(>|z|)     #> (Intercept)        1.36119    0.03930  34.634  < 2e-16 *** #> backgroundChinese -0.06916    0.05694  -1.215  0.22451     #> backgroundEnglish -0.21696    0.05814  -3.731  0.00019 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                               edf Ref.df Chi.sq p-value     #> s(months):backgroundBengali 1.935  1.996  83.24  <2e-16 *** #> s(months):backgroundChinese 1.003  1.006 143.06  <2e-16 *** #> s(months):backgroundEnglish 1.000  1.000  42.38  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.0384   Deviance explained = 7.72% #> UBRE = 6.1223  Scale est. = 1         n = 540 gs_by %>%   predict_gam(length_out = 20, series = \"months\", tran_fun = exp) %>%   plot(comparison = \"background\") gs_by %>%   predict_gam(length_out = 20, series = \"months\", tran_fun = exp) %>%   plot(comparison = \"background\") +   scale_color_brewer(type = \"qual\") + scale_fill_brewer(type = \"qual\") gs_by_2 <- gam(   count ~ gesture + background +     s(months, by = background, k = 3) +     s(months, by = gesture, k = 3),   data = gest,   family = poisson )  summary(gs_by_2) #>  #> Family: poisson  #> Link function: log  #>  #> Formula: #> count ~ gesture + background + s(months, by = background, k = 3) +  #>     s(months, by = gesture, k = 3) #>  #> Parametric coefficients: #>                   Estimate Std. Error z value Pr(>|z|)     #> (Intercept)        1.63549    0.04821  33.927  < 2e-16 *** #> gesturepoint      -0.41072    0.05695  -7.213 5.49e-13 *** #> gesturereach      -0.53554    0.05791  -9.248  < 2e-16 *** #> backgroundChinese -0.06937    0.05693  -1.219 0.222975     #> backgroundEnglish -0.21719    0.05812  -3.737 0.000186 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                                   edf    Ref.df Chi.sq  p-value     #> s(months):backgroundBengali 1.9226651 1.9925158 54.925  < 2e-16 *** #> s(months):backgroundChinese 1.1043907 1.1961394 84.781  < 2e-16 *** #> s(months):backgroundEnglish 1.0009022 1.0017885 28.978  < 2e-16 *** #> s(months):gestureho_gv      1.0014574 1.0028600  4.207   0.0403 *   #> s(months):gesturepoint      0.0003739 0.0007391  0.000   0.9959     #> s(months):gesturereach      1.2383962 1.4167559 25.127 1.51e-05 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Rank: 16/17 #> R-sq.(adj) =  0.0824   Deviance explained =   13% #> UBRE = 5.7338  Scale est. = 1         n = 540 gs_by_2 %>%   predict_gam(length_out = 20, series = \"months\", tran_fun = exp) %>%   plot(comparison = \"gesture\") +   scale_color_brewer(type = \"qual\") + scale_fill_brewer(type = \"qual\") +   facet_grid(~ background) to_exclude <- c(\"s(months):gestureho_gv\", \"s(months):gesturepoint\", \"s(months):gesturereach\",                 \"gesturepoint\", \"gesturereach\")  gs_by_2 %>%   predict_gam(length_out = 20, series = \"months\", tran_fun = exp,               exclude_terms = to_exclude,               # pick any value of the excluded variables.               values = list(gesture = \"point\")) %>%   plot(comparison = \"background\") +   scale_color_brewer(type = \"qual\") + scale_fill_brewer(type = \"qual\")"},{"path":"https://stefanocoretta.github.io/tidygam/articles/get-started.html","id":"models-with-factor-interactions","dir":"Articles","previous_headings":"","what":"Models with factor interactions","title":"Get started","text":"Classical interactions factors usually obtained linear models : syntax (e.g. background:gesture) possible GAMs. alternative way specify called interactions generalised linear models creating new factor interaction two factors using interaction() function, include “factor interaction” predictors -variable. predicting values, user can use separate argument specify factor-interaction variables model can split back individual components. gives greater flexibility plotting.","code":"gest <- gest %>%   mutate(back_gest = interaction(background, gesture))  gs_i <- gam(   count ~ back_gest + s(months, by = back_gest, k = 3),   data = gest,   family = poisson )  summary(gs_i) #>  #> Family: poisson  #> Link function: log  #>  #> Formula: #> count ~ back_gest + s(months, by = back_gest, k = 3) #>  #> Parametric coefficients: #>                        Estimate Std. Error z value Pr(>|z|)     #> (Intercept)             1.76112    0.05783  30.452  < 2e-16 *** #> back_gestChinese.ho_gv  0.01249    0.08045   0.155   0.8766     #> back_gestEnglish.ho_gv -0.87624    0.10592  -8.273  < 2e-16 *** #> back_gestBengali.point -1.07758    0.11358  -9.487  < 2e-16 *** #> back_gestChinese.point -1.05327    0.12189  -8.641  < 2e-16 *** #> back_gestEnglish.point -0.19015    0.08283  -2.296   0.0217 *   #> back_gestBengali.reach -0.48164    0.08943  -5.386 7.22e-08 *** #> back_gestChinese.reach -0.81182    0.09928  -8.177 2.91e-16 *** #> back_gestEnglish.reach -1.03646    0.10751  -9.640  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                                    edf Ref.df Chi.sq  p-value     #> s(months):back_gestBengali.ho_gv 1.773  1.949 87.901  < 2e-16 *** #> s(months):back_gestChinese.ho_gv 1.002  1.003 72.955  < 2e-16 *** #> s(months):back_gestEnglish.ho_gv 1.001  1.002 40.670  < 2e-16 *** #> s(months):back_gestBengali.point 1.941  1.997 22.153 2.08e-05 *** #> s(months):back_gestChinese.point 1.001  1.001 91.257  < 2e-16 *** #> s(months):back_gestEnglish.point 1.000  1.000  8.542  0.00347 **  #> s(months):back_gestBengali.reach 1.738  1.931  2.725  0.19781     #> s(months):back_gestChinese.reach 1.749  1.937  3.538  0.11830     #> s(months):back_gestEnglish.reach 1.000  1.000  4.261  0.03902 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.0999   Deviance explained = 18.8% #> UBRE = 5.3243  Scale est. = 1         n = 540 predict_gam(   gs_i, tran_fun = exp,   separate = list(back_gest = c(\"background\", \"gesture\")) ) %>%   plot(series = \"months\", comparison = \"gesture\") +   facet_grid(~ background)"},{"path":"https://stefanocoretta.github.io/tidygam/articles/get-started.html","id":"models-with-factor-smooth-interactions-bs-fs","dir":"Articles","previous_headings":"","what":"Models with factor smooth interactions (bs = \"fs\")","title":"Get started","text":"Factor smooth interactions GAM equivalent random/group-level effects (intercepts slopes). Let’s work struct data, contains event-related potentials measures subjects listening music speech. type (music vs language), stimuli either “grammatical” “ungrammatical” (.e. stimuli either respected structural rules ). subset original data, including voltage values electrode 62. Let’s fit model factor smooth interactions (bs = \"fs\"). predicting values want exclude factor smooth interaction, random/group-level effects linear models. Note GAM terms excluded must specified named output summary().  fs interaction removed, predicted smooth individual level fs interaction returned.","code":"data(\"struct\") struct #> # A tibble: 4,400 × 7 #>        t electrode voltage subject stimulus.condition grammar.condition #>    <dbl>     <dbl>   <dbl> <fct>   <fct>              <fct>             #>  1  -100        62 -0.315  03      Language           Grammatical       #>  2   -90        62 -0.320  03      Language           Grammatical       #>  3   -80        62 -0.297  03      Language           Grammatical       #>  4   -70        62 -0.628  03      Language           Grammatical       #>  5   -60        62 -1.05   03      Language           Grammatical       #>  6   -50        62 -0.734  03      Language           Grammatical       #>  7   -40        62  0.0544 03      Language           Grammatical       #>  8   -30        62  0.623  03      Language           Grammatical       #>  9   -20        62  1.05   03      Language           Grammatical       #> 10   -10        62  1.14   03      Language           Grammatical       #> # ℹ 4,390 more rows #> # ℹ 1 more variable: stim_gram <fct> struct <- struct %>%   mutate(stim_gram = interaction(stimulus.condition, grammar.condition))  st <- bam(   voltage ~ stim_gram +     s(t, by = stim_gram, k = 5) +     s(t, subject, bs = \"fs\", m = 1),   data = struct )  summary(st) #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> voltage ~ stim_gram + s(t, by = stim_gram, k = 5) + s(t, subject,  #>     bs = \"fs\", m = 1) #>  #> Parametric coefficients: #>                                 Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                      0.61210    0.19052   3.213  0.00132 **  #> stim_gramMusic.Grammatical       0.22318    0.09401   2.374  0.01763 *   #> stim_gramLanguage.Ungrammatical -0.98969    0.09401 -10.528  < 2e-16 *** #> stim_gramMusic.Ungrammatical     0.37377    0.09401   3.976 7.12e-05 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                                         edf Ref.df      F p-value     #> s(t):stim_gramLanguage.Grammatical    2.846  3.249  2.889 0.02137 *   #> s(t):stim_gramMusic.Grammatical       2.627  3.022  4.243 0.00531 **  #> s(t):stim_gramLanguage.Ungrammatical  3.270  3.629  1.620 0.09791 .   #> s(t):stim_gramMusic.Ungrammatical     3.848  3.962 26.467 < 2e-16 *** #> s(t,subject)                         50.511 89.000  6.597 < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.202   Deviance explained = 21.4% #> fREML = 9800.7  Scale est. = 4.8605    n = 4400 predict_gam(   st,   length_out = 50,   series = \"t\",   exclude_terms = \"s(t,subject)\",   # Pick any subject: since we are removing the random effect, it does not   # matter which one you pick, the predictions will be the same   values = c(subject = \"03\"),   separate = list(stim_gram = c(\"stimulus\", \"grammar\")) ) %>%   plot(comparison = \"grammar\") +   geom_hline(yintercept = 0) +   facet_grid(~ stimulus) predict_gam(   st,   length_out = 50,   series = \"t\",   separate = list(stim_gram = c(\"stimulus\", \"grammar\")) ) %>%   plot(comparison = \"grammar\") +   geom_hline(yintercept = 0) +   facet_grid(~ stimulus)"},{"path":"https://stefanocoretta.github.io/tidygam/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefano Coretta. Author, maintainer.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Coretta S (2024). tidygam: Tidy Prediction Plotting Generalised Additive Models. R package version 1.0.0, https://stefanocoretta.github.io/tidygam/, https://github.com/stefanocoretta/tidygam.","code":"@Manual{,   title = {tidygam: Tidy Prediction and Plotting of Generalised Additive Models},   author = {Stefano Coretta},   year = {2024},   note = {R package version 1.0.0,     https://stefanocoretta.github.io/tidygam/},   url = {https://github.com/stefanocoretta/tidygam}, }"},{"path":"https://stefanocoretta.github.io/tidygam/index.html","id":"tidygam-tidy-prediction-and-plotting-of-generalised-additive-models","dir":"","previous_headings":"","what":"Tidy Prediction and Plotting of Generalised Additive Models","title":"Tidy Prediction and Plotting of Generalised Additive Models","text":"tidygam, users can easily obtain predictions Generalised Additive Models (GAMs) plot , using tidyverse tools.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy Prediction and Plotting of Generalised Additive Models","text":"can install latest release tidygam GitHub : Alternatively, can install development version:","code":"# install.packages(\"remotes\") remotes::install_github(\"stefanocoretta/tidygam@v1.0.0\") # install.packages(\"remotes\") remotes::install_github(\"stefanocoretta/tidygam@devel\")"},{"path":"https://stefanocoretta.github.io/tidygam/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Tidy Prediction and Plotting of Generalised Additive Models","text":"examples, see Get started vignette documentation predict_gam() plot.tidygam().","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/gest.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of gestures by infants at 10, 11 and 12 months — gest","title":"Number of gestures by infants at 10, 11 and 12 months — gest","text":"data table contains counts three type gestures performed 60 infants  Bengali, Chinese British backgrounds.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/gest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of gestures by infants at 10, 11 and 12 months — gest","text":"","code":"gest"},{"path":"https://stefanocoretta.github.io/tidygam/reference/gest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of gestures by infants at 10, 11 and 12 months — gest","text":"tibble 540 observations 5 variables: dyad Unique parent/infant dyad ID. background Cultural background dyad. months Time point infant months. gesture Type gesture. count Number gestures.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/gest.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Number of gestures by infants at 10, 11 and 12 months — gest","text":"doi:10.1111/cdev.13406","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/get_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Get difference between two smooths — get_difference","title":"Get difference between two smooths — get_difference","text":"Get difference two smooths","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/get_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get difference between two smooths — get_difference","text":"","code":"get_difference(   model,   series,   compare,   values = NULL,   exclude_terms = NULL,   length_out = 25,   ci_z = 1.96 )"},{"path":"https://stefanocoretta.github.io/tidygam/reference/get_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get difference between two smooths — get_difference","text":"model gam bam model object. series string specifying variable corresponds series plotted $x$-axis. string given, numeric variables model set mean value, unless specific values given values. character vector two strings given, two variables taken elements tensor product smooth. allows user plot 2D raster plots. compare named list factor levels compare. values User supplied values specific variables named list. exclude_terms Terms excluded prediction. Term names given appear model summary (example, \"s(x0,x1)\"). length_out integer indicating many values use along numeric variables predicting response (default 10). ci_z z-value calculating CIs (default 1.96 95 percent CI).","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/get_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get difference between two smooths — get_difference","text":"tibble difference smooth.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/get_difference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get difference between two smooths — get_difference","text":"","code":"library(mgcv) #> Loading required package: nlme #> This is mgcv 1.9-1. For overview type 'help(\"mgcv-package\")'. set.seed(10) data <- gamSim(4) #> Factor `by' variable example model <- gam(y ~ s(x2, by = fac) + s(x0), data = data)  get_difference(model, \"x2\", list(fac = c(\"1\", \"2\"))) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. #> # A tibble: 26 × 7 #>         x2 fac      x0  diff    se lower_ci upper_ci #>      <dbl> <chr> <dbl> <dbl> <dbl>    <dbl>    <dbl> #>  1 0.00134 1-2   0.499  2.83 0.701    1.45      4.20 #>  2 0.0413  1-2   0.499  2.65 0.589    1.49      3.80 #>  3 0.0812  1-2   0.499  2.47 0.498    1.49      3.44 #>  4 0.121   1-2   0.499  2.29 0.429    1.45      3.13 #>  5 0.161   1-2   0.499  2.11 0.378    1.37      2.85 #>  6 0.201   1-2   0.499  1.94 0.343    1.27      2.61 #>  7 0.241   1-2   0.499  1.78 0.318    1.15      2.40 #>  8 0.281   1-2   0.499  1.61 0.300    1.02      2.20 #>  9 0.321   1-2   0.499  1.44 0.286    0.884     2.01 #> 10 0.361   1-2   0.499  1.27 0.276    0.734     1.82 #> # ℹ 16 more rows"},{"path":"https://stefanocoretta.github.io/tidygam/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://stefanocoretta.github.io/tidygam/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot methods for tidygam.diff objects — plot.tidygam.diff","title":"Plot methods for tidygam.diff objects — plot.tidygam.diff","text":"Plotting methods tidygam.diff objects.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot methods for tidygam.diff objects — plot.tidygam.diff","text":"","code":"# S3 method for class 'tidygam.diff' plot(x, ..., sig = TRUE, sig_col = \"red\", sig_alpha = 0.25)"},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot methods for tidygam.diff objects — plot.tidygam.diff","text":"x tidygam.diff object (see get_difference()). ... Arguments passed plot(). sig Shade interval(s) difference smooth include 0 (default TRUE). sig_col Colour shading (default \"red\"). sig_alpha Alpha level shading (default 0.25)","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot methods for tidygam.diff objects — plot.tidygam.diff","text":"ggplot object.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot methods for tidygam.diff objects — plot.tidygam.diff","text":"","code":"library(mgcv) set.seed(10) data <- gamSim(4) #> Factor `by' variable example model <- gam(y ~ s(x2, by = fac) + s(x0), data = data)  model_diff <- get_difference(model, \"x2\", list(fac = c(\"1\", \"2\"))) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. plot(model_diff)"},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot methods for tidygam objects — plot.tidygam","title":"Plot methods for tidygam objects — plot.tidygam","text":"Plotting methods tidygam objects.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot methods for tidygam objects — plot.tidygam","text":"","code":"# S3 method for class 'tidygam' plot(x, series = NULL, comparison = NULL, raster_interp = FALSE, ...)"},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot methods for tidygam objects — plot.tidygam","text":"x tidygam object (see predict_gam()). series string specifying variable corresponds series plotted $x$-axis. string given, numeric variables model set mean value, unless specific values given values. character vector two strings given, two variables taken elements tensor product smooth. allows user plot 2D raster plots. comparison Name categorical predictor compare string. raster_interp Whether linearly interpolate plotting tensor product smooth/interaction. makes sense series two variables. default FALSE. ... Arguments passed plot().","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot methods for tidygam objects — plot.tidygam","text":"ggplot object.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/plot.tidygam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot methods for tidygam objects — plot.tidygam","text":"","code":"library(mgcv) set.seed(10) sim_data <- gamSim(4) #> Factor `by' variable example  model_1 <- gam(y ~ s(x2, by = fac) + s(x0), data = sim_data)  preds_1 <- predict_gam(model_1, length_out = 50, exclude_terms = \"s(x0)\") #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. plot(preds_1, \"x2\")   preds_2 <- predict_gam(model_1, length_out = 100, values = list(x0 = 0)) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. plot(preds_2, \"x2\", \"fac\")  library(ggplot2) plot(preds_2, \"x2\", \"fac\") +   scale_fill_brewer(type = \"qual\") +   scale_color_brewer(type = \"qual\")   # Plotting tensor product smooths/interactions model_2 <- gam(y ~ te(x0, x2, by = fac), data = sim_data) preds_3 <- predict_gam(model_2) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. preds_3 %>% plot(series = c(\"x0\", \"x2\"), comparison = \"fac\")"},{"path":"https://stefanocoretta.github.io/tidygam/reference/predict_gam.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predictions from a GAM model — predict_gam","title":"Get predictions from a GAM model — predict_gam","text":"Return predictions GAM model generated mgcv. output can plotted plot().","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/predict_gam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predictions from a GAM model — predict_gam","text":"","code":"predict_gam(   model,   length_out = 10,   values = NULL,   series = NULL,   exclude_terms = NULL,   ci_z = 1.96,   tran_fun = NULL,   separate = NULL,   sep_by = \"\\\\.\" )"},{"path":"https://stefanocoretta.github.io/tidygam/reference/predict_gam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predictions from a GAM model — predict_gam","text":"model gam bam model object. length_out integer indicating many values use along numeric variables predicting response (default 10). values User supplied values specific variables named list. series string specifying variable corresponds series plotted $x$-axis. string given, numeric variables model set mean value, unless specific values given values. character vector two strings given, two variables taken elements tensor product smooth. allows user plot 2D raster plots. exclude_terms Terms excluded prediction. Term names given appear model summary (example, \"s(x0,x1)\"). ci_z z-value calculating CIs (default 1.96 95 percent CI). tran_fun Function use transforming predicted values CIs. separate Names list factor interaction variables separated. sep_by Character separate (default \\\\.).","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/predict_gam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predictions from a GAM model — predict_gam","text":"tibble predictions.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/predict_gam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get predictions from a GAM model — predict_gam","text":"","code":"library(mgcv) set.seed(10)  sim_data_1 <- gamSim(1, n = 200, scale = 2) #> Gu & Wahba 4 term additive model model <- gam(y ~ x0 + s(I(x1^2)) + s(x2) + offset(x3), data = sim_data_1) predict_gam(model) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. #> # A tibble: 1,331 × 8 #>        x0        x1      x2    x3       y    se lower_ci[,1] upper_ci[,1] #>     <dbl>     <dbl>   <dbl> <dbl>   <dbl> <dbl>        <dbl>        <dbl> #>  1 0.0144 0.0000639 0.00217     0 -0.247  0.874        -1.96         1.47 #>  2 0.112  0.0000639 0.00217     0 -0.151  0.853        -1.82         1.52 #>  3 0.209  0.0000639 0.00217     0 -0.0548 0.837        -1.69         1.58 #>  4 0.306  0.0000639 0.00217     0  0.0414 0.824        -1.57         1.66 #>  5 0.403  0.0000639 0.00217     0  0.138  0.815        -1.46         1.73 #>  6 0.501  0.0000639 0.00217     0  0.234  0.810        -1.35         1.82 #>  7 0.598  0.0000639 0.00217     0  0.330  0.810        -1.26         1.92 #>  8 0.695  0.0000639 0.00217     0  0.426  0.815        -1.17         2.02 #>  9 0.792  0.0000639 0.00217     0  0.522  0.823        -1.09         2.14 #> 10 0.890  0.0000639 0.00217     0  0.619  0.836        -1.02         2.26 #> # ℹ 1,321 more rows predict_gam(model, values = list(x0 = mean(sim_data_1$x0))) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. #> # A tibble: 121 × 8 #>       x0        x1      x2    x3     y    se lower_ci[,1] upper_ci[,1] #>    <dbl>     <dbl>   <dbl> <dbl> <dbl> <dbl>        <dbl>        <dbl> #>  1 0.474 0.0000639 0.00217     0 0.207 0.811       -1.38          1.80 #>  2 0.474 0.0998    0.00217     0 0.249 0.808       -1.33          1.83 #>  3 0.474 0.200     0.00217     0 0.375 0.799       -1.19          1.94 #>  4 0.474 0.299     0.00217     0 0.584 0.790       -0.963         2.13 #>  5 0.474 0.399     0.00217     0 0.876 0.786       -0.664         2.42 #>  6 0.474 0.499     0.00217     0 1.26  0.787       -0.282         2.80 #>  7 0.474 0.598     0.00217     0 1.78  0.790        0.233         3.33 #>  8 0.474 0.698     0.00217     0 2.48  0.790        0.932         4.03 #>  9 0.474 0.798     0.00217     0 3.38  0.795        1.82          4.94 #> 10 0.474 0.898     0.00217     0 4.50  0.826        2.88          6.12 #> # ℹ 111 more rows predict_gam(model, series = \"x2\") #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. #> # A tibble: 11 × 8 #>       x0    x1      x2    x3      y    se lower_ci[,1] upper_ci[,1] #>    <dbl> <dbl>   <dbl> <dbl>  <dbl> <dbl>        <dbl>        <dbl> #>  1 0.474 0.362 0.00217     0  0.757 0.787       -0.785         2.30 #>  2 0.474 0.362 0.102       0  7.36  0.478        6.42          8.30 #>  3 0.474 0.362 0.202       0 11.5   0.489       10.6          12.5  #>  4 0.474 0.362 0.301       0 10.4   0.452        9.51         11.3  #>  5 0.474 0.362 0.401       0  6.93  0.440        6.07          7.79 #>  6 0.474 0.362 0.501       0  6.53  0.517        5.52          7.55 #>  7 0.474 0.362 0.601       0  7.05  0.463        6.14          7.96 #>  8 0.474 0.362 0.701       0  5.79  0.467        4.88          6.71 #>  9 0.474 0.362 0.800       0  3.69  0.496        2.72          4.66 #> 10 0.474 0.362 0.900       0  2.44  0.458        1.54          3.33 #> 11 0.474 0.362 1.00        0  3.14  0.701        1.76          4.51 predict_gam(model, exclude_terms = \"s(I(x1^2))\") #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. #> # A tibble: 1,331 × 8 #>        x0        x1      x2    x3     y    se lower_ci[,1] upper_ci[,1] #>     <dbl>     <dbl>   <dbl> <dbl> <dbl> <dbl>        <dbl>        <dbl> #>  1 0.0144 0.0000639 0.00217     0  1.55 0.835      -0.0909         3.18 #>  2 0.112  0.0000639 0.00217     0  1.64 0.815       0.0450         3.24 #>  3 0.209  0.0000639 0.00217     0  1.74 0.798       0.173          3.30 #>  4 0.306  0.0000639 0.00217     0  1.83 0.786       0.293          3.38 #>  5 0.403  0.0000639 0.00217     0  1.93 0.778       0.405          3.46 #>  6 0.501  0.0000639 0.00217     0  2.03 0.775       0.508          3.55 #>  7 0.598  0.0000639 0.00217     0  2.12 0.776       0.602          3.64 #>  8 0.695  0.0000639 0.00217     0  2.22 0.782       0.687          3.75 #>  9 0.792  0.0000639 0.00217     0  2.32 0.792       0.763          3.87 #> 10 0.890  0.0000639 0.00217     0  2.41 0.806       0.831          3.99 #> # ℹ 1,321 more rows  # By-variables sim_data_2 <- gamSim(4) #> Factor `by' variable example model_2 <- gam(y ~ s(x2, by = fac) + s(x0), data = sim_data_2) predict_gam(model_2) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. #> # A tibble: 363 × 7 #>         x2 fac        x0       y    se lower_ci[,1] upper_ci[,1] #>      <dbl> <fct>   <dbl>   <dbl> <dbl>        <dbl>        <dbl> #>  1 0.00161 2     0.00130 -0.789  0.609       -1.98         0.405 #>  2 0.101   2     0.00130 -0.612  0.417       -1.43         0.206 #>  3 0.201   2     0.00130 -0.407  0.352       -1.10         0.283 #>  4 0.300   2     0.00130 -0.0976 0.352       -0.788        0.592 #>  5 0.399   2     0.00130  0.335  0.363       -0.377        1.05  #>  6 0.499   2     0.00130  0.861  0.371        0.133        1.59  #>  7 0.598   2     0.00130  1.49   0.372        0.761        2.22  #>  8 0.698   2     0.00130  2.24   0.370        1.52         2.97  #>  9 0.797   2     0.00130  3.12   0.384        2.36         3.87  #> 10 0.897   2     0.00130  4.10   0.463        3.19         5.01  #> # ℹ 353 more rows  # Poisson data sim_data_3 <- sim_data_2 sim_data_3$y <- round(sim_data_2$y) + 20 model_3 <- gam(y ~ s(x2, by = fac), data = sim_data_3, family = poisson) predict_gam(model_3, length_out = 50) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. #> # A tibble: 153 × 6 #>         x2 fac       y     se lower_ci[,1] upper_ci[,1] #>      <dbl> <fct> <dbl>  <dbl>        <dbl>        <dbl> #>  1 0.00161 2      2.94 0.0382         2.86         3.01 #>  2 0.0215  2      2.94 0.0358         2.87         3.01 #>  3 0.0414  2      2.95 0.0336         2.88         3.01 #>  4 0.0613  2      2.95 0.0314         2.89         3.01 #>  5 0.0812  2      2.95 0.0295         2.90         3.01 #>  6 0.101   2      2.96 0.0276         2.90         3.01 #>  7 0.121   2      2.96 0.0260         2.91         3.01 #>  8 0.141   2      2.97 0.0245         2.92         3.01 #>  9 0.161   2      2.97 0.0231         2.92         3.01 #> 10 0.181   2      2.97 0.0220         2.93         3.02 #> # ℹ 143 more rows predict_gam(model_3, length_out = 50, tran_fun = exp) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. #> # A tibble: 153 × 6 #>         x2 fac   y[,1]     se lower_ci[,1] upper_ci[,1] #>      <dbl> <fct> <dbl>  <dbl>        <dbl>        <dbl> #>  1 0.00161 2      18.9 0.0382         17.5         20.4 #>  2 0.0215  2      19.0 0.0358         17.7         20.3 #>  3 0.0414  2      19.0 0.0336         17.8         20.3 #>  4 0.0613  2      19.1 0.0314         18.0         20.3 #>  5 0.0812  2      19.2 0.0295         18.1         20.3 #>  6 0.101   2      19.3 0.0276         18.2         20.3 #>  7 0.121   2      19.3 0.0260         18.4         20.3 #>  8 0.141   2      19.4 0.0245         18.5         20.4 #>  9 0.161   2      19.5 0.0231         18.6         20.4 #> 10 0.181   2      19.6 0.0220         18.7         20.4 #> # ℹ 143 more rows  # Bivariate smooths model_4 <- gam(y ~ te(x1, x2), data = sim_data_1) predict_gam(model_4) #> Warning: Could not recover model data from environment. Please make sure your #>   data is available in your workspace. #>   Trying to retrieve data from the model frame now. #> # A tibble: 121 × 6 #>         x1      x2     y    se lower_ci[,1] upper_ci[,1] #>      <dbl>   <dbl> <dbl> <dbl>        <dbl>        <dbl> #>  1 0.00799 0.00217  4.24 1.62          1.06         7.42 #>  2 0.107   0.00217  3.81 1.21          1.44         6.17 #>  3 0.206   0.00217  3.45 1.03          1.43         5.47 #>  4 0.305   0.00217  3.25 0.996         1.30         5.21 #>  5 0.404   0.00217  3.24 0.997         1.29         5.20 #>  6 0.503   0.00217  3.40 1.01          1.42         5.38 #>  7 0.602   0.00217  3.71 0.958         1.83         5.58 #>  8 0.701   0.00217  4.17 0.916         2.38         5.97 #>  9 0.801   0.00217  4.85 1.03          2.83         6.88 #> 10 0.900   0.00217  5.74 1.39          3.00         8.47 #> # ℹ 111 more rows"},{"path":"https://stefanocoretta.github.io/tidygam/reference/struct.html","id":null,"dir":"Reference","previous_headings":"","what":"ERP to structural violation in music and language — struct","title":"ERP to structural violation in music and language — struct","text":"data table contains ERP amplitude data 39 subjects listening speech music.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ERP to structural violation in music and language — struct","text":"","code":"struct"},{"path":"https://stefanocoretta.github.io/tidygam/reference/struct.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ERP to structural violation in music and language — struct","text":"tibble 17160 observations 6 variables: t Time stimulus onset milliseconds. electrode Electrode number. voltage Electrode voltage time t. stimulus.condition Language vs music. grammar.condition Structural type (grammatical vs ungrammatical).","code":""},{"path":"https://stefanocoretta.github.io/tidygam/reference/struct.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ERP to structural violation in music and language — struct","text":"doi:10.31234/osf.io/e9w3v","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/tidygam/news/index.html","id":"soft-breaking-1-0-0","dir":"Changelog","previous_headings":"","what":"SOFT-BREAKING","title":"tidygam 1.0.0","text":"Now predict_gam() uses lpmatrix predictions means excluding terms user set value excluded variable. especially relevant excluding (random) factor smooths: user pick value random variable smooth avoid predictions output levels random variable (see Get started vignette examples). Note older code still work produce duplicated predictions.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/news/index.html","id":"changed-1-0-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"tidygam 1.0.0","text":"Now predict_gam() uses lpmatrix predictions. now possible exclude terms, smooth parametric.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/news/index.html","id":"developer-1-0-0","dir":"Changelog","previous_headings":"","what":"Developer","title":"tidygam 1.0.0","text":"Update renv packages.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/news/index.html","id":"tidygam-022","dir":"Changelog","previous_headings":"","what":"tidygam 0.2.2","title":"tidygam 0.2.2","text":"CRAN release: 2024-12-07 Fixed date DESCRIPTION.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/news/index.html","id":"tidygam-021","dir":"Changelog","previous_headings":"","what":"tidygam 0.2.1","title":"tidygam 0.2.1","text":"Fixed language field DESCRIPTION.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/news/index.html","id":"tidygam-020","dir":"Changelog","previous_headings":"","what":"tidygam 0.2.0","title":"tidygam 0.2.0","text":"CRAN release: 2023-05-09","code":""},{"path":"https://stefanocoretta.github.io/tidygam/news/index.html","id":"added-0-2-0","dir":"Changelog","previous_headings":"","what":"Added","title":"tidygam 0.2.0","text":"get_difference() returns difference two smooths. plot.tidygam.diff method plot difference smooth. Data gest struct. separate sep_by arguments predict_gam() allow user separate variables model created interaction(). Vignette get-started.Rmd.","code":""},{"path":"https://stefanocoretta.github.io/tidygam/news/index.html","id":"fixed-0-2-0","dir":"Changelog","previous_headings":"","what":"Fixed","title":"tidygam 0.2.0","text":"Error predicting bivariate smooths (s/te/ti(), fs/re basis functions) first variable returned internally. Error plotting difference smooth significant difference (closes #5). Error get_difference() work excluding random smooths (closes #8).","code":""},{"path":"https://stefanocoretta.github.io/tidygam/news/index.html","id":"tidygam-010","dir":"Changelog","previous_headings":"","what":"tidygam 0.1.0","title":"tidygam 0.1.0","text":"First minor release package. Added NEWS.md file track changes package.","code":""}]
